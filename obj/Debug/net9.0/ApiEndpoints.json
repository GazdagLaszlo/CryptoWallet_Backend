[
  {
    "ContainingType": "CryptoWallet.Controllers.CryptocurrencyController",
    "Method": "ListCryptos",
    "RelativePath": "api/Cryptocurrency",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CryptoWallet.Dto.CryptocurrencyShortResponseDTO, CryptoWallet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.CryptocurrencyController",
    "Method": "CreateCryptocurrency",
    "RelativePath": "api/Cryptocurrency",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptocurrency",
        "Type": "CryptoWallet.Model.Cryptocurrency",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Model.Cryptocurrency",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.CryptocurrencyController",
    "Method": "GetCryptocurrency",
    "RelativePath": "api/Cryptocurrency/{cryptocurrencyId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptocurrencyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Model.Cryptocurrency",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.CryptocurrencyController",
    "Method": "DeleteCryptocurrency",
    "RelativePath": "api/Cryptocurrency/{cryptocurrencyId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptocurrencyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.LimitOrderController",
    "Method": "DeleteOrder",
    "RelativePath": "api/LimitOrder/{orderId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.LimitOrderController",
    "Method": "GetOrders",
    "RelativePath": "api/LimitOrder/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.LimitOrderController",
    "Method": "LimitBuy",
    "RelativePath": "api/LimitOrder/trade/limit-buy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "limitOrderCreateDTO",
        "Type": "CryptoWallet.Dto.LimitOrderCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.LimitOrderCreateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.LimitOrderController",
    "Method": "LimitSell",
    "RelativePath": "api/LimitOrder/trade/limit-sell",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "limitOrderCreateDTO",
        "Type": "CryptoWallet.Dto.LimitOrderCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.LimitOrderCreateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.PortfolioController",
    "Method": "GetPortfolio",
    "RelativePath": "api/Portfolio/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.PortfolioResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.PortfolioController",
    "Method": "GetProfit",
    "RelativePath": "api/Portfolio/profit/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.PortfolioController",
    "Method": "DetailedGetProfit",
    "RelativePath": "api/Portfolio/profit/details/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.Dictionary\u00602[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Double, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.PriceHistoryController",
    "Method": "GetPriceHistory",
    "RelativePath": "api/PriceHistory/{cryptocurrencyId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptocurrencyId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[CryptoWallet.Dto.PriceHistoryResponseDTO, CryptoWallet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.PriceHistoryController",
    "Method": "UpdatePrice",
    "RelativePath": "api/PriceHistory/price",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cryptocurrencyId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPrice",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.TransactionController",
    "Method": "GetAllTransaction",
    "RelativePath": "api/Transaction/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CryptoWallet.Dto.TransactionShortResponseDTO, CryptoWallet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.TransactionController",
    "Method": "Buy",
    "RelativePath": "api/Transaction/buy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionCreate",
        "Type": "CryptoWallet.Dto.TransactionCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.TransactionController",
    "Method": "GetTransaction",
    "RelativePath": "api/Transaction/details/{transactionId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.TransactionResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.TransactionController",
    "Method": "Sell",
    "RelativePath": "api/Transaction/sell",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionCreate",
        "Type": "CryptoWallet.Dto.TransactionCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.UserResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "userPutDto",
        "Type": "CryptoWallet.Dto.UserPutDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.UserController",
    "Method": "Login",
    "RelativePath": "api/User/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userLoginDTO",
        "Type": "CryptoWallet.Dto.UserLoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.UserController",
    "Method": "Register",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userCreateDTO",
        "Type": "CryptoWallet.Dto.UserCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.WalletController",
    "Method": "GetWallet",
    "RelativePath": "api/Wallet/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "CryptoWallet.Dto.WalletResponseDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CryptoWallet.Controllers.WalletController",
    "Method": "UpdateBalance",
    "RelativePath": "api/Wallet/{userId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "walletBalancePutDto",
        "Type": "CryptoWallet.Dto.WalletBalancePutDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CryptoWallet.Controllers.WalletController",
    "Method": "DeleteWallet",
    "RelativePath": "api/Wallet/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]